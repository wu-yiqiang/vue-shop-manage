{"remainingRequest":"C:\\Users\\windows\\Project\\vue-shop-manage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\windows\\Project\\vue-shop-manage\\src\\components\\goods\\Params.vue?vue&type=style&index=0&id=8c7b49e2&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\windows\\Project\\vue-shop-manage\\src\\components\\goods\\Params.vue","mtime":1612272203842},{"path":"C:\\Users\\windows\\Project\\vue-shop-manage\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\windows\\Project\\vue-shop-manage\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\windows\\Project\\vue-shop-manage\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\windows\\Project\\vue-shop-manage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\windows\\Project\\vue-shop-manage\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouY2F0X29wdCB7DQogIG1hcmdpbi10b3A6IDIwcHg7DQp9DQouZWwtdGFnew0KICBtYXJnaW4tcmlnaHQ6MjBweDsNCn0NCg=="},{"version":3,"sources":["Params.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuMA;AACA;AACA;AACA;AACA;AACA","file":"Params.vue","sourceRoot":"src/components/goods","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>参数列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <el-alert title=\"注意：只允许为第三级分类设置相关参数！\" type=\"warning\" :closable=\"false\" show-icon> </el-alert>\r\n      <el-row class=\"cat_opt\">\r\n        <el-col>\r\n          <span>选择商品分类: </span>\r\n          <!-- 级联选择框 -->\r\n          <el-cascader :options=\"catelist\" :props=\"cateProps\" v-model=\"selectedCateKeys\" @change=\"handleChange\" checkStrictly:false></el-cascader>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- tab页签区域 -->\r\n      <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\r\n        <el-tab-pane label=\"动态参数\" name=\"many\">\r\n          <el-button type=\"primary\" size=\"mini\" :disabled=\"isBtnDisabled\" @click=\"addDataInfo()\">\r\n            添加参数\r\n          </el-button>\r\n\r\n          <!-- 折叠表格 -->\r\n          <el-table :data=\"goodsParams\"  style=\"width: 100%\" border >\r\n            <el-table-column type=\"expand\">\r\n              <template slot-scope=\"scope\">\r\n               <el-tag :key=\"tag\" v-for=\"tag in scope.row.attr_vals.split(' ')\" closable :disable-transitions=\"false\" >\r\n                  {{tag}}\r\n                </el-tag>\r\n                <el-input\r\n                  class=\"input-new-tag\"\r\n                  v-if=\"inputVisible\"\r\n                  v-model=\"inputValue\"\r\n                  ref=\"saveTagInput\"\r\n                  size=\"small\"\r\n                  @keyup.enter.native=\"handleInputConfirm\"\r\n                  @blur=\"handleInputConfirm\"\r\n                >\r\n                </el-input>\r\n                <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput\">+ New Tag</el-button>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column type=\"index\" > </el-table-column>\r\n            <el-table-column label=\"参数名称\" prop=\"attr_name\"> </el-table-column>\r\n            <el-table-column label=\"操作\" >\r\n              <el-button type=\"primary\" size=\"mini\">\r\n                编辑\r\n              </el-button>\r\n              <el-button type=\"danger\" size=\"mini\">\r\n                删除\r\n              </el-button>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"静态属性\" name=\"only\">\r\n          <el-button type=\"primary\" size=\"mini\" :disabled=\"isBtnDisabled\">\r\n            添加属性\r\n          </el-button>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n\r\n      <!-- 添加参数对话框 -->\r\n      <el-dialog title=\"添加参数\"  :visible.sync=\"addDataInfoDialogVisible\"  width=\"30%\"  >\r\n        <el-form :model=\"addParamsRuleForm\" :rules=\"addParamsRuleFormRules\" ref=\"addParamsRuleFormRef\" label-width=\"100px\" >\r\n          <el-form-item label=\"动态参数\" prop=\"params\">\r\n            <el-input  v-model=\"addParamsRuleForm.params\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"addParamSubmitForm()\">提交</el-button>\r\n            <el-button @click=\"addParamSresetForm()\">重置</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-dialog>\r\n\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n\r\n      /*  */\r\n      catelist: [],\r\n      cateProps: {\r\n        value: 'cat_id',\r\n        label: 'cat_name',\r\n        children: 'children'\r\n      },\r\n      /* 分页数据 */\r\n      selectedCateKeys: [],     //选中项\r\n      activeName: 'many',       //选项卡\r\n      goodsParams:[       //返回的动态参数\r\n        \r\n      ],   \r\n\r\n\r\n      /* 添加参数对话框数据 */\r\n      addParamsRuleForm:{        //添加参数对话框数据\r\n        params:\"\",\r\n      } ,\r\n      addDataInfoDialogVisible:false,       //添加参数对话框显示\r\n      addParamsRuleFormRules:{        //输入数据校验\r\n          params:[\r\n            {required:true,message:\"请输入数据\",toggler:\"blur\"}\r\n          ]\r\n      }\r\n\r\n      /*  */\r\n    }\r\n  },\r\n  created() {\r\n    this.getCateList()\r\n  },\r\n  methods: {\r\n    async getCateList() {\r\n      const { data: res } = await this.$http.get('categories')\r\n\r\n      if (res.meta.status !== 200) return this.$message.console.error(res.meta.msg)\r\n      this.catelist = res.data\r\n    },\r\n    // 级联选择框选中项变化会触发\r\n    handleChange() {\r\n      this.getParamsData()\r\n    },\r\n    // Tab 页签点击时触发\r\n    handleTabClick() {\r\n      this.getParamsData()\r\n    },\r\n    async handleChange() {\r\n      //级联选择框变化触发\r\n      if (this.selectedCateKeys.length !== 3) {\r\n        this.selectedCateKeys = []\r\n        return false\r\n      }\r\n      const { data: res } = await this.$http.get(`categories/${this.cateId}/attributes`, { params: { sel: this.activeName } })\r\n      if (res.meta.status != 200) return this.$message.error(res.meta.msg)\r\n\r\n      //请求参数数据并将数据渲染到页面\r\n      console.log(res)  \r\n      this.goodsParams=res.data\r\n      //添加描述标签\r\n    },\r\n    handleClick() {\r\n      //tab选项卡切换\r\n    },\r\n    async addDataInfo(){\r\n      //添加动态参数或者静态属性对话框显示\r\n      this.addDataInfoDialogVisible=true\r\n    },\r\n    addParamSresetForm() {\r\n      //添加参数对话框内容清除\r\n      this.addParamsRuleForm.params=\"\"\r\n    },\r\n    async addParamSubmitForm(){\r\n      //确定添加参数或者属性\r\n      if(this.addParamsRuleForm.params.trim().length===0) return this.$message.error(\"请输入值!!!\")\r\n      \r\n     \r\n      const {data:res}=await this.$http.post(\"categories/${}/attributes\",{attr_name:this.addParamsRuleForm.params.trim(),attr_sel:,attr_vals:})\r\n\r\n      if(res.meta.status!==201) return this.$message.error(res.meta.msg)\r\n\r\n\r\n    }\r\n  },\r\n  computed: {\r\n    isBtnDisabled() {\r\n      if (this.selectedCateKeys.length !== 3) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    cateId() {\r\n      if (this.selectedCateKeys.length === 3) {\r\n        return this.selectedCateKeys[2]\r\n      }\r\n      return null\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n.cat_opt {\r\n  margin-top: 20px;\r\n}\r\n.el-tag{\r\n  margin-right:20px;\r\n}\r\n</style>\r\n"]}]}